SELECT USER
FROM DUAL;
--==>> SCOTT


--■■■ UPDATE ■■■--

-- 1. 테이블에서 기존 데이터를 변경하는 구문

-- 2. 형식 및 구조
-- UPDATE 테이블명
-- SET 컬럼명=변경할 값[, 컬럼명=변경할 값, ...]
-- [WHERE 조건절] 조건절은 없어도 UPDATE문 실행하는데 이상 X

SELECT *
FROM TBL_SAWON;

-- 세션 변경
ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';
--==>> Session이(가) 변경되었습니다.

--○ TBL_SAWON 테이블에서 사원번호 1003번 사원의 주민번호를 
--   『8303082234567』로 수정한다.
UPDATE TBL_SAWON
SET JUBUN = '8303082234567'
WHERE SANO = 1003;
--==>> 1 행 이(가) 업데이트되었습니다.

SELECT *
FROM TBL_SAWON;
--==>> 1003	김아별	8303082234567	1999-08-16	5000

-- 실행 후 COMMIT 또는 ROLLBACK 을 반드시 선택적으로 실행
COMMIT;
--==>> 커밋완

--○ TBL_SAWON 테이블에서 1005번 사원의 입사일과 급여를
--   각각 2018-02-22, 2200 으로 변경한다.
UPDATE TBL_SAWON
SET HIREDATE = TO_DATE('2018-02-22', 'YYYY-MM-DD'), SAL = 2200
WHERE SANO = 1005;
--==>> 1 행 이(가) 업데이트되었습니다.

SELECT *
FROM TBL_SAWON;


-- 실행 후 COMMIT 또는 ROLLBACK 을 반드시 선택적으로 실행
COMMIT;
--==>> 커밋완

--○ TBL_INSA 테이블 복사(데이터만)
CREATE TABLE TBL_INSABACKUP
AS
SELECT *
FROM TBL_INSA;
--==>> Table TBL_INSABACKUP이(가) 생성되었습니다.

--○ TBL_INSABACKUP 테이블에서
--   직위가 과장과 부장만 수당 10% 인상

-- 내가 풀었던 방법
SELECT *
FROM TBL_INSABACKUP;

UPDATE TBL_INSABACKUP
SET SUDANG=SUDANG*1.1
WHERE JIKWI IN ('과장', '부장');

DROP TABLE TBL_INSABACKUP;

SELECT *
FROM TBL_INSABACKUP;


--선생님이 풀어준 방법
SELECT NAME "사원명", JIKWI "직위", SUDANG "수당", SUDANG*1.1 "10%인상된수당"
FROM TBL_INSABACKUP
WHERE JIKWI IN ('과장', '부장');


UPDATE TBL_INSABACKUP
SET SUDANG=SUDANG*1.1
WHERE JIKWI IN ('과장', '부장');


--○ TBL_INSABACKUP 테이블에서 전화번호가 016, 017, 018, 019로 시작하는
--   전화번호인 경우 이를 모두 010으로 변경한다.

UPDATE TBL_INSABACKUP
SET SUBSTR(TEL, 1, 3) = '010'
WHERE SUBSTR(TEL, 1, 3) IN ('016', '017', '018', '019');

SELECT *
FROM TBL_INSABACKUP;

UPDATE TBL_INSABACKUP
SET TEL = 010
WHERE TEL='016' OR TEL='017' OR TEL='018' OR TEL='019';

--선생님이 푸는 방법
SELECT TEL "기존전화번호", '010' || SUBSTR(TEL, 4) "변경된전화번호"
FROM TBL_INSABACKUP
WHERE SUBSTR(TEL, 1, 3) IN ('016', '017', '018', '019');
--==>>
/*
019-5236-4221	010-5236-4221
018-5211-3542	010-5211-3542
016-2222-4444	010-2222-4444
019-1111-2222	010-1111-2222
018-2222-4242	010-2222-4242
019-6666-4444	010-6666-4444
016-2548-3365	010-2548-3365
018-1333-3333	010-1333-3333
017-4747-4848	010-4747-4848
017-5214-5282	010-5214-5282
019-8523-1478	010-8523-1478
016-1818-4848	010-1818-4848
016-3535-3636	010-3535-3636
019-6564-6752	010-6564-6752
019-5552-7511	010-5552-7511
016-8888-7474	010-8888-7474
016-4444-7777	010-4444-7777
016-4444-5555	010-4444-5555
016-8548-6547	010-8548-6547
017-3333-3333	010-3333-3333
018-0505-0505	010-0505-0505
016-1919-4242	010-1919-4242
016-2424-4242	010-2424-4242
016-6542-7546	010-6542-7546
*/


UPDATE TBL_INSABACKUP
SET TEL = '010' || SUBSTR(TEL, 4)
WHERE SUBSTR(TEL, 1, 3) IN ('016', '017', '018', '019');
--==>> 24개 행 이(가) 업데이트되었습니다.

SELECT *
FROM TBL_INSABACKUP;

--○ TBL_SAWON 테이블 백업
CREATE TABLE TBL_SAWONBACKUP
AS
SELECT *
FROM TBL_SAWON;
--==>> Table TBL_SAWONBACKUP이(가) 생성되었습니다.
--> TBL_SAWON 테이블의 데이터들만 백업을 수행
--  즉, 다른 이름의 테이블 형태로 저장해 둔 상황

-- ○ 확인
SELECT *
FROM TBL_SAWONBACKUP;
SELECT *
FROM TBL_SAWON;



-- 선생님이 TBL_SAWON 테이블에 있는 SANAME 모든 이름 '이무림'으로 변경하는
-- 예시 보여줌
UPDATE TBL_SAWON
SET SANAME = '이무림';  

-- UPDATE 처리 이후에 COMMIT 을 수행하였기 때문에
-- ROLLBACK 은 불가능한 상황이다.
-- 하지만, TBL_SAWONBACKUP 테이블에 데이터를 백업해 두었다.
-- SANAME 컬럼의 내용만 추출하여 '이무림'대신 넣어줄 수 있다는 것이다.

--이렇게 변경해줘야함
UPDATE TBL_SAWON
SET SANAME='김서현'
WHERE SANO=1002;


UPDATE TBL_SAWON
SET SANAME=TBL_SAWONBACKUP 테이블의 1004번 사원의 사원명;

UPDATE TBL_SAWON
SET SANAME=( SELECT SANAME
             FROM TBL_SAWONBACKUP
             WHERE SANO = TBL_SAWON.SANO);

SELECT SANAME
FROM TBL_SAWONBACKUP
WHERE SANO=1002;
-- SAWON에 있는 값 가져와서 SAWONBACKUP 테이블에 있는 값대로 업데이트

SELECT *
FROM TBL_SAWON;
--==>> 복원완.















